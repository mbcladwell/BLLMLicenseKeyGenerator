/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/tutorial_java_projects.html
 */


buildscript{
   repositories {
          jcenter()
     }

    dependencies {
              classpath 'com.google.guava:guava:23.0'
   
              classpath 'junit:junit:4.12'
              classpath 'org.ajoberstar:gradle-git:0.6.1'
             }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
    //id 'net.alchim31.getdown'

}


mainClassName = 'bllmlkg.LicenseKeyGenerator'

version = '0.12'
import org.ajoberstar.gradle.git.tasks.GitTag
import org.ajoberstar.gradle.git.tasks.GitPush

task runMain(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
 
  main = 'bllmlkg.LicenseKeyGenerator'

  // arguments to pass to the application
  //args 'appArg1'
}



ext.yourTag = "REL-${project.version}".toString()

task createTag(type: GitTag) {
   repoPath = '.'
   tagName = yourTag
   message = "Application release ${project.version}"
}

task pushTag(type: GitPush, dependsOn: createTag) {
   namesOrSpecs = [yourTag]
}


 
jar {
    manifest {
        attributes(
                'Main-Class': 'bllmlkg.LicenseKeyGenerator',
                'Implementation-Title': 'License Key Generator',
                'Implementation-Version': version,
                'provider': 'net.stihie'
        )
    }
}

task copyFiles(type: Copy, dependsOn: [jar]) {
    from configurations.runtime
    from("build/libs")
    into("webstart/lib")
    include('*.jar')
}

task signAll(dependsOn: [copyFiles]) << {
    new File('webstart/signed').mkdirs()
    def libFiles = files { file('webstart/lib').listFiles() }
    libFiles.each {
        ant.signjar(
                destDir: 'webstart/signed',
                alias: 'mbcladwell',
                jar: it,
                keystore: 'src/jnlp/keys/JWSKeystore',
                storepass: 'fjdksiop1',
                keypass: 'fjdksiop1',
                preservelastmodified: 'false')
    }
  	
}


task copyWebstartToWeb(type: Copy, dependsOn: [signAll]) {
   // from configurations.runtime
    from("webstart/signed")
    into("/home/mbc/syncd/stihie/source/_posts/2018-08-09-bllmlkg")
    include('*.jar', '*.jnlp')
}


task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
}


task copyJavaDocsToWeb(type: Copy, dependsOn: [myJavadocs]) {
   // from configurations.runtime
    from("build/docs/.")
    into("/home/mbc/syncd/stihie/source/_posts/2018-08-09-bllmlkg")
    include('*.html', '*.js', '*.js')
    include('javadoc/**')
    
}





